
test.elf:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_start>:
.section .text

_start:
  .global _start
  /* set all registers to zero */
  mv  x1, x0
   0:	00000093          	li	ra,0
  mv  x2, x1
   4:	00008113          	mv	sp,ra
  mv  x3, x1
   8:	00008193          	mv	gp,ra
  mv  x4, x1
   c:	00008213          	mv	tp,ra
  mv  x5, x1
  10:	00008293          	mv	t0,ra
  mv  x6, x1
  14:	00008313          	mv	t1,ra
  mv  x7, x1
  18:	00008393          	mv	t2,ra
  mv  x8, x1
  1c:	00008413          	mv	s0,ra
  mv  x9, x1
  20:	00008493          	mv	s1,ra
  mv x10, x1
  24:	00008513          	mv	a0,ra
  mv x11, x1
  28:	00008593          	mv	a1,ra
  mv x12, x1
  2c:	00008613          	mv	a2,ra
  mv x13, x1
  30:	00008693          	mv	a3,ra
  mv x14, x1
  34:	00008713          	mv	a4,ra
  mv x15, x1
  38:	00008793          	mv	a5,ra
  mv x16, x1
  3c:	00008813          	mv	a6,ra
  mv x17, x1
  40:	00008893          	mv	a7,ra
  mv x18, x1
  44:	00008913          	mv	s2,ra
  mv x19, x1
  48:	00008993          	mv	s3,ra
  mv x20, x1
  4c:	00008a13          	mv	s4,ra
  mv x21, x1
  50:	00008a93          	mv	s5,ra
  mv x22, x1
  54:	00008b13          	mv	s6,ra
  mv x23, x1
  58:	00008b93          	mv	s7,ra
  mv x24, x1
  5c:	00008c13          	mv	s8,ra
  mv x25, x1
  60:	00008c93          	mv	s9,ra
  mv x26, x1
  64:	00008d13          	mv	s10,ra
  mv x27, x1
  68:	00008d93          	mv	s11,ra
  mv x28, x1
  6c:	00008e13          	mv	t3,ra
  mv x29, x1
  70:	00008e93          	mv	t4,ra
  mv x30, x1
  74:	00008f13          	mv	t5,ra
  mv x31, x1
  78:	00008f93          	mv	t6,ra

  /* stack initilization */
  la   x2, _stack_start
  7c:	000f2117          	auipc	sp,0xf2
  80:	f8410113          	addi	sp,sp,-124 # f2000 <_stack_start>

  /* clear BSS */
  la x26, _bss_start
  84:	1e400d13          	li	s10,484
  la x27, _bss_end
  88:	1e400d93          	li	s11,484

  bge x26, x27, zero_loop_end
  8c:	01bd5863          	bge	s10,s11,9c <zero_loop_end>

00000090 <zero_loop>:

zero_loop:
  sw x0, 0(x26)
  90:	000d2023          	sw	zero,0(s10)
  addi x26, x26, 4
  94:	004d0d13          	addi	s10,s10,4
  ble x26, x27, zero_loop
  98:	ffaddce3          	bge	s11,s10,90 <zero_loop>

0000009c <zero_loop_end>:
zero_loop_end:

la      s0, data 
  9c:	00000417          	auipc	s0,0x0
  a0:	02840413          	addi	s0,s0,40 # c4 <data>
lbu     a5,-17(s0)
  a4:	fef44783          	lbu	a5,-17(s0)
addi    a5,a5,48
  a8:	03078793          	addi	a5,a5,48
sb      a5,-17(s0)
  ac:	fef407a3          	sb	a5,-17(s0)

000000b0 <main_entry>:

main_entry:
  /* jump to main program entry point (argc = argv = 0) */
  addi x10, x0, 0
  b0:	00000513          	li	a0,0
  addi x11, x0, 0
  b4:	00000593          	li	a1,0
  j   main
  b8:	0e40006f          	j	19c <main>

  call   sim_halt
  bc:	0b4000ef          	jal	ra,170 <sim_halt>

000000c0 <sleep_loop>:

  
  /* If execution ends up here just put the core to sleep */
sleep_loop:
  j sleep_loop
  c0:	0000006f          	j	c0 <sleep_loop>

000000c4 <data>:
	...

000000e4 <put_char>:

/*----------------------------------------------*/
/* Put a character                              */
/*----------------------------------------------*/
int put_char(char c) 
{
  e4:	fe010113          	addi	sp,sp,-32
  e8:	00812e23          	sw	s0,28(sp)
  ec:	02010413          	addi	s0,sp,32
  f0:	00050793          	mv	a5,a0
  f4:	fef407a3          	sb	a5,-17(s0)
  DEV_WRITE(CTRL_BASE + CTRL_OUT, (unsigned char)c);
  f8:	002007b7          	lui	a5,0x200
  fc:	00478793          	addi	a5,a5,4 # 200004 <_stack_start+0x10e004>
 100:	fef44703          	lbu	a4,-17(s0)
 104:	00e7a023          	sw	a4,0(a5)
  return c;
 108:	fef44783          	lbu	a5,-17(s0)
}
 10c:	00078513          	mv	a0,a5
 110:	01c12403          	lw	s0,28(sp)
 114:	02010113          	addi	sp,sp,32
 118:	00008067          	ret

0000011c <put_str>:

int put_str(const char *str) 
{
 11c:	fe010113          	addi	sp,sp,-32
 120:	00112e23          	sw	ra,28(sp)
 124:	00812c23          	sw	s0,24(sp)
 128:	02010413          	addi	s0,sp,32
 12c:	fea42623          	sw	a0,-20(s0)
  while (*str) 
 130:	01c0006f          	j	14c <put_str+0x30>
  {
    put_char(*str++);
 134:	fec42783          	lw	a5,-20(s0)
 138:	00178713          	addi	a4,a5,1
 13c:	fee42623          	sw	a4,-20(s0)
 140:	0007c783          	lbu	a5,0(a5)
 144:	00078513          	mv	a0,a5
 148:	f9dff0ef          	jal	ra,e4 <put_char>
  while (*str) 
 14c:	fec42783          	lw	a5,-20(s0)
 150:	0007c783          	lbu	a5,0(a5)
 154:	fe0790e3          	bnez	a5,134 <put_str+0x18>
  }
  return 0;
 158:	00000793          	li	a5,0
}
 15c:	00078513          	mv	a0,a5
 160:	01c12083          	lw	ra,28(sp)
 164:	01812403          	lw	s0,24(sp)
 168:	02010113          	addi	sp,sp,32
 16c:	00008067          	ret

00000170 <sim_halt>:
#include <stdint.h>
#include "util.h"
#include "soc_reg.h"

void sim_halt() 
{ 
 170:	ff010113          	addi	sp,sp,-16
 174:	00812623          	sw	s0,12(sp)
 178:	01010413          	addi	s0,sp,16
  DEV_WRITE(CTRL_BASE + CTRL_CTRL, 1); 
 17c:	002007b7          	lui	a5,0x200
 180:	00878793          	addi	a5,a5,8 # 200008 <_stack_start+0x10e008>
 184:	00100713          	li	a4,1
 188:	00e7a023          	sw	a4,0(a5)
}
 18c:	00000013          	nop
 190:	00c12403          	lw	s0,12(sp)
 194:	01010113          	addi	sp,sp,16
 198:	00008067          	ret

0000019c <main>:
#include "util.h"
#include "soc_reg.h"
#include "kprintf.h"

int main(int argc, char **argv) 
{
 19c:	fe010113          	addi	sp,sp,-32
 1a0:	00112e23          	sw	ra,28(sp)
 1a4:	00812c23          	sw	s0,24(sp)
 1a8:	02010413          	addi	s0,sp,32
 1ac:	fea42623          	sw	a0,-20(s0)
 1b0:	feb42423          	sw	a1,-24(s0)
  put_str("Hello World!!\n");
 1b4:	1d400513          	li	a0,468
 1b8:	f65ff0ef          	jal	ra,11c <put_str>
 // sim_halt();
  return 0;
 1bc:	00000793          	li	a5,0
}
 1c0:	00078513          	mv	a0,a5
 1c4:	01c12083          	lw	ra,28(sp)
 1c8:	01812403          	lw	s0,24(sp)
 1cc:	02010113          	addi	sp,sp,32
 1d0:	00008067          	ret
